12/11/2018
==========
-More dummy pvr2 registers. Now we reach interrupt controller

09/11/2018
==========
-added pvr id reg. Now we reach a05f8008 reg (softreset reg)

07/11/2018
==========
-added aicaRegs file for avctl register
-fixed cache access and log them
-added a few more instructions
-Now we reach first PVR access

06/11/2018
==========
-Reduced mmucr,ccr reads in memory

02/10/2018
==========
-fixed bug in JSR instruction 
-Added TOCR mapped register
-More work now we reach reading from PDTRA register
-Dummy PDTRA implementation (TODO again)
-Now it tries to read from a0702c00 (AICA registers probably)

01/10/2018
==========
-Added memmap class and move memory accesses there
-Made write32 to store long value
-Added virtual mem to all read/writes

31/10/2018
==========
-intial value of register[15] based on kallistos
-Implemented a few more opcodes. Now i reach an infinitive loop while trying to read from addresses 8c00e016, 8c00e018
-Added MMUCR,CCR to dumpRegisters function
-Fixed extractbits util 

30/10/2018
==========
-More opcodes , SH-4 mapped registers. Now we reach bios up to pc=A0000042
-dummy pref instruction implementation
-Some intial work on loading IP.bin (loads to ram now)

29/10/2018
==========
-Added a few more opcodes. Now we reach the first write to MMUCR register
-Added more opcodes. Now we also write to CCR register

25/10/2018
==========
-Finished instruction decoder for sh-4
-Implemented a few more instructions
-Now it crashes while reading SH-4 mapped registers (EXPEVT one) need to implemented them
-Intial SH4 mapped implementation (for reading EXPEVT value)
-Some more work on interpreter

24/10/2018
==========
-Added configuration file class
-Started skeleton for interpreter cpu
-Added first cpu instruction (MOV #imm,Rn)
-Added another cpu instruction ( SHLL16 Rn)

22/10/2018
==========
-More instructions to disassembler

12/10/2018
==========
-More instructions to disassembler

11/10/2018
==========
-added read16 to memory in order to start disasm instructions (so far it appears that bios opcode strings are correct)
-better output with String.format
-Added dissasembler decoder and implemented some simple instructions disasm
-More dissasembler work

10/10/2018
==========
-Intial project creation
-Added simple log class
-Added static init class
-Implemented loading of bin file (bios file to be specific ) to a bytebuffer